=====================================================
=====================================================
7 May 2018
=====================================================
=====================================================
DOCKER ENGINE - A Platform for running a containers
http://www.devopsschool.com/tutorial/docker/docker-install-commuityedition-oldmethod.html
	

DOCKER IMAGES - A kind of App which you package to run with Docker engine

DOCKER REPO - A Place from where you can get the images
	PUBLIC - hub.docker.com
	PRO  - store.docker.com
	PRIVATE - Nexus, Artifactory

CONTAINER - A running state of the images is being called a containers.

FIRST COMMAND
> docker info
> docker help

Docker release
		Community Edition
		Enterprise Edition

WHICH APPLICATION YOU WANT TO RUN?
jenkins  -  JAVA BASED

From where i get the Jenkins Images?
	hub.docker.com

How to see the number of images?
> docker images

Where the images getting stred?
/var/lib/docker

How to download the images?
> docker pull jenkins

How to get containers?
> docker run jenkins

jenkins is a web based tool.
	SERVER - WEB PORT - 8080
	NODE - 50000

> docker run -p 8080:8080 -p 50000:50000 jenkins

-p 8080:8080	external:internal
-p 50000:50000

> docker run -p 8080:8080 -p 50000:50000 jenkins

How to check running containers?
> docker ps

How to run a container in detahced mode?
> docker run -d -p 8090:8080 -p 50001:50000 jenkins

How to get inside a containers?
docker exec
	> docker exec -it 5b96be95b063 /bin/bash
docker attach

How to come out of the containers without existing safetly?
CTRL + P + Q

docker exec is very powerful commands. Using exec you can script or commands inside a containers.
> docker exec 5b96be95b063 ls
> docker exec 5b96be95b063 df -kh
> docker exec 5b96be95b063 ps -eaf
> docker exec 5b96be95b063 top
> docker exec 5b96be95b063 /opt/script.sh

How can you see the number of processes is runnning inside the container?
> docker top cont-id

How to see all the containers including
		created
		running
		exited
> docker ps -a

How to get a container created?
> docker run -d -p 8090:8080 -p 50001:50000 jenkins

How to stop the containers?
> docker stop cont-id

How to start the containers?
> docker start cont-id

How to check the container process logs?
> docker logs cont-id

How to name a containers?
>docker run -d --name=jenkins1 -p 8090:8080 -p 50001:50000 jenkins

How can i rename containers?
> docker rename cont-id new-name

How can i describe the containers?
> docker inspect cont-id


=====================================================
=====================================================
8 May 2018
=====================================================
=====================================================
exec        Run a command in a running container
info        Display system-wide information
inspect     Return low-level information on Docker objects
logs        Fetch the logs of a container
images      List images
ps          List containers
run         Run a command in a new container
start       Start one or more stopped containers
stop        Stop one or more running containers
version     Show the Docker version information
pull        Pull an image or a repository from a registry
rename      Rename a container

13.232.18.147
cp          Copy files/folders between a container and the local filesystem

How to copy a file from host to containers?
> docker cp copart 22bf09c1d2ef:/opt

How to copy from Container to Hosts?
> docker cp 22bf09c1d2ef:/opt/copart 

How to delete a containers?
rm          Remove one or more containers
> docker rm cont-id cont-id

How can i delete a images?
rmi         Remove one or more images
> docker rmi image-name

How to know running process inside a containers?
top         Display the running processes of a container
> docker top cont-id

How to know CPU and RAM used by the containers?
stats       Display a live stream of container(s) resource usage statistics 
> docker stats cont-id
> docker stats

restart     Restart one or more containers
How to stop and start together of containers?
> docker restart 22bf09c1d2ef

EXEC VS ATTACH
EXEC - 		Is a way to run the executables/scripts
		Always create a new terminal

ATTACH  - 	Attach is way to get attached to the running process of containers
		WILL NOT CREATE A NEW TERMINAL


EACH CONTAINERS NEED AT LEAST OF ONE PROCESS TO KEEP A CONTAINER ALIVE.
PHASES OF THE CONTAINERS
	CREATED
	RUNNING (ONE ACTIVE PROCESS)
	EXITED

VOLUMES WITH CONTAINERS?
> docker run -d --name=jenkins1 -p 8090:8080 -p 50001:50000 jenkins
> docker run -d --name=jenkins2 -p 8090:8080 -p 50001:50000 -v /opt/jenkins-bkp:/var/jenkins_home jenkins


INTERAL - /var/jenkins_home
EXTERNAL - /opt/jenkins-bkp

How to troubelshoot?
> docker logs cont-id

HOW TO STOP CONTAINERS AND REMOVE IT IN ONE GO.
docker stop $(docker ps -a -q)
docker rm $(docker ps -a -q)

How to search images using commands line?
search      Search the Docker Hub for images
> docker search search-string

How to stop the containers by force?
kill        Kill one or more running containers
> docker kill cont-id

DOCKER IMAGES & CONTAINER IS A FILESYSTEM (INTELLIGENT)

=====================================================
=====================================================
9 May 2018
=====================================================
=====================================================
13.127.208.216

Docker Networking
------------------------
Docker Community Edition supports 3 kinds of Networking
	Bridge - a kind of network driver which basically has CIDR IP range is set with their subnets and basically this release the Virtual IP address to each container. It is a virtual bridge created by the docker engine.

[root@ip-172-31-27-243 ~]# ifconfig
docker0: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500
        inet 172.17.0.1  netmask 255.255.0.0  broadcast 0.0.0.0
        ether 02:42:88:d3:66:1b  txqueuelen 0  (Ethernet)
        RX packets 0  bytes 0 (0.0 B)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 0  bytes 0 (0.0 B)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
How many bridge you have by default?
> docker network ls

[root@ip-172-31-27-243 ~]# docker network ls
NETWORK ID          NAME                DRIVER              SCOPE
8ae63a765b61        bridge              bridge              local
8db9fe690246        host                host                local
ed5e91e198ef        none                null                local

How to know the IP address of the containers?
> docker run -itd ubuntu
> docker inspect cont-id
"Gateway": "172.17.0.1",
"IPAddress": "172.17.0.2",
 "Networks": {
                "bridge": {

172.17.0.2
172.17.0.3

Can i ping or access the containes from host machine?
_ YES

> docker attach cont-id
> apt-get update
> apt-get install -y iputils-ping traceroute net-tools


Qs - Can you access the container ip adddress outside of the host machine?
Qs - Can we change the bridge?


How can we create new bridge?
> docker network create copart-dev --driver=bridge
> docker run -itd --net=copart-dev ubuntu 

Host
This driver mode shares the networking of the host with the containers.
HOST - 172.31.27.243
> docker run -itd --net=host ubuntu 

NULL
Which do not share the HOST networing and Also no Bridge. NO NETWORKING
> docker run -itd --net=none ubuntu  

Docker Cotainers Process in System
===========================================
Container is nothing but a isolated user space with their won network, process, mounts
#Container is nothing but a writeable layer of the running state of the image
Container is not but a running state of the image
Container is nothing but a process running on host machine to keep a container PMAP alive.


MORE NETWORKING COMMANDS -http://www.devopsschool.com/notes/docker/commands-collections/docker-networking.txt

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes 
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server  
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image 
  import      Import the contents from a tarball to create a filesystem imag 
  push        Push an image or a repository to a registry 
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
    pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container  
save        Save one or more images to a tar archive (streamed to STDOUT by default)

  

  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE 
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers 
  wait        Block until one or more containers stop, then print their exit codes



