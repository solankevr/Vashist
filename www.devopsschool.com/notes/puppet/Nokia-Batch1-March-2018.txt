What is Puppet?
	Config mgmt tool

What is Config mgmt?
	SERVERS CONFIG MGMT

What is there in SERVERS so you do manage config of it?
	file
	directory
	package
	services
	user
	group
	apt
	yum

Puppet can manage 
	SOFTWARE
	HARDWARE
	PEOPLE
	PROCESS

Why do you need Puppet?
	
	JAVA
	C++	
	PERL
	PYTHON

	DIFF TO LEARN | SHARE | EXTEND | TEST | DEBUG ETC
	Compare to Puppet

	BASH  - WINDOWS X
	BATCH - LINUX
	Puppet  - Single Script can work on any Platform

	SERVERS - Capabilities to manage the lasrge number of SERVERS

	IDEOPOTENT
		PUPPET		DESIRE ==== ACTUAL
		NOT PUPPET	DESIRE ==X== ACTUAL

	COST EFFECTIVE
	TIME SAVING 

OTHER TOOLS ---- 
	PUPPET
	ANSIBLE
	CHEF
	SALT

Role in Puppet?
	Puppet Developers - Write-Test-Release
	Puppet Admin      - Apply-Admin

Today + Tomo Half day== Dev
Tomo last half day === Admin

===================================================

How to become a Puppet Programmers?

GCC+JDK ===> puppet agent

.cp+.java  ==> .pp (Puppet Program)
.exe+.jar  ==> module

======================================
How to compile CPP | JAVA | PUPPET
		gcc  | javac || puppet agent

==============================
How to write .pp?

Consist of 
	Collection of Resources.....

	
	Some of them are
	Resources	ACTIOn(ENSURE)		ATTRIBUTES(PROP)		
	================================================
	file		C | D | U		
	package		I | R |
	service		R | S|S|E|D
	user		C | D | M
	group
	host
	yum

Where do you find all list of resources...
https://puppet.com/docs/puppet/5.4/type.html

Each Resources dec is consist of
	TYPE
	TITLE
	ATTRIBUTES
	PROVIDERR




	
How to Install puppet agents?



Install the puppet-agent package:
$ yum update
$ sudo rpm -ivh https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm
$ sudo yum -y install puppet-agent


DIRECTORY STRUCTURE OF PUPPET
==================================
BIN - /opt/puppetlabs
CONF - /etc/puppetlabs

puppet resource service httpd
service { 'httpd':
  ensure => 'stopped',
  enable => 'false',
}

> puppet resource service puppet ensure=running enable=true
> puppet resource service httpd ensure=running enable=true

How to create a file using puppet?
===========================================
file { 'file1.txt':
  ensure                  => present
}

[root@ip-172-31-10-105 puppet]# puppet apply first.pp
Notice: Compiled catalog for ip-172-31-10-105.ap-south-1.compute.internal in environment production in 0.06 seconds
Notice: /Stage[main]/Main/File[/opt/file1.txt]/ensure: created
Notice: Applied catalog in 0.01 seconds



How to put content into the file using puppet?
file { '/opt/file1.txt':
  ensure  => present,
  content => "This is my first puppet program"
}

file { '/opt/file2.txt':
  ensure  => present,
  content => "This is my first puppet program"
}


file { '/opt/src':
  ensure  => directory,
}

TASK - CHANGE THE PERMISSIoN n OWNER
==========================================================
Lets play with some commands.....

KNOW THE PUPPET AGENT CONFIG
================================
puppet config print
puppet config print confdir
puppet config print certname
puppet config print {confdir rundir ssldir runinterval }

Example of Puppet Apply - Make sure puppet agent is not running
================================
puppet resource service puppet
puppet parser validate puppet-service.pp
puppet apply puppet-service.pp

Puppet Style Guide
================================
https://docs.puppet.com/puppet/4.9/style_guide.html
puppet module list
puppet module install theurbanpenguin/puppet_vim
puppet module list

Code - puppet-vim.pp
include puppet_vim 

sudo puppet parser validate puppet-vim.pp
sudo puppet apply puppet-vim.pp


===========================
puppet describe --list #List all resources
puppet describe file #List documentation for the file resources
sudo puppet module install puppetlabs/stdlib #Installing the stanadard lib givess us the access to functions such as pw_hash

PRB 1: Setup a Webserver
1. Install httpd
2. Copy/Create index.html into the webserver
3. Start httpd


package { 'httpd':
  ensure               => installed
}

file { '/var/www/html/index.html':
  ensure  => present,
  content => "<h1>This is my first program</h1>"
}

service { 'httpd':
  ensure     => running
}

PRB 2
===============================================
Write a puppet program in which you create a group called "nokia-admin" and add a user called "dev".
also, please insert a host entry with follwing
13.127.137.108 master.com

Take a Backup in GITLAB & GITHUB

============================================
Servers
1 13.126.207.70
2 13.126.209.151
3 13.127.16.239
4 13.127.146.26
5 13.127.169.53
6 13.127.173.115
7 13.127.179.48
8 13.127.213.151
9 35.154.1.106
10 35.154.59.59
11 35.154.76.234	
12 35.154.123.128
13 35.154.146.97
14 52.66.76.218

15 52.66.185.3
16 13.126.229.112
17 13.126.32.170


PROVIDERS	DONE
FUNCTIONS	DONE
Variable 	DONE
COnditions 	DONE

Module
Classes
file
Template


=============================================
C++			Puppet
			.pp
UT - Nunit		??
AT - QTP | HPQC		??
Code Analyis		??
Code Coverage		??
Document		??


==============================
MODULES & Envrionments.....


Puppet Modules Commnads
========================================
> sudo puppet module list
> sudo puppet module install puppetlabs/ntp
> suod puppet module list
> sudo puppet module uninstall puppetlabs/ntp
> sudo puppet module install puppetlabs/ntp -i /etc/puppetlabs/code/modules

Location of modules and environements
============================================
/etc/puppetlabs/code/environements
/etc/puppetlabs/code/modules

> sudo puppet config print
> sudo puppet config print environment
> sudo puppet config print envrionementpath
> cd $(sudo puppet config print envrionementpath)
> ls
> ls -l production


Create another environment
=================================================
sudo mkdir -p /etc/puppetlabs/code/environments/dev/{modules,manifests}
sudo puppet module install puppetlabs/ntp --environment dev
sudo puppet module list --environment dev

> sudo puppet config print environment
> cat /etc/puppetlabs/puppet/puppet.conf
> sudo puppet config set environment dev
> cat /etc/puppetlabs/puppet/puppet.conf
> sudo puppet config print environment
> sudo puppet module list

==================================================
Revert back to production environment
================================================


MODULES
========================================================
cd /etc/puppetlabs/code/environments/productions/modules
sudo mkdir -p motd/{manifests,files,examples}
sudo vim motd/manifests/init.pp

class motd {
file { '/etc/motd':
  ensure => 'file',`
  content => file('motd/message'),
  }
}

cd /etc/puppetlabs/code/environments/productions/modules
sudo vim motd/files/message

Welcome to scmgalaxy class
dsdsad\dsadasd\d\s


How to use module?
> sudo puppet apply -e 'include motd'

> sudo puppet module list
===========================================

> cd /etc/puppetlabs/code/environments/productions/modules
> sudo puppet module generate scmgalaxy/test
> sudo puppet module generate scmgalaxy/test --skip-interview
> sudo puppet module list

class test::file1 {

}
===============================================
Setting up a Puppet Enerprise
52.66.27.39

Step 1. Modifying the host file
# Set the puppet master hostname
$ hostnamectl set-hostname puppet.example.vm
$ hostnamectl
$ ifconfig
$ sudo vi /etc/hosts
As this is our primary hostname

127.0.0.1  puppet.example.vm puppet localhost
52.66.27.39 puppet.example.vm #public ip
172.31.28.130 puppet.example.vm #private ip


Step 2. ntp

$ sudo yum -y install ntp
$ sudo systemctl start ntpd
$ sudo systemctl enable ntpd
$ sudo ntpd -p

Step 3. Install

$ yum install wget
> cd /opt
$ wget https://s3.amazonaws.com/pe-builds/released/2017.2.3/puppet-enterprise-2017.2.3-el-7-x86_64.tar.gz
$ tar -zxvf puppet-enterprise-2017.2.3-el-7-x86_64.tar.gz
$ cd puppet-enterprise-2017.2.3-el-7-x86_64
$ ./puppet-enterprise-installer



4. Config  - 1
WEB INSTALL
https://puppet.example.vm:3000

1 13.126.63.224
2 13.127.194.209
3 13.127.189.143
4 13.127.201.173
5 13.127.98.166
6 35.154.7.67
7 35.154.93.2
8 13.127.209.85
9 13.127.151.138
10 13.127.185.27
11 13.127.174.218
12 13.127.187.122
13 13.127.203.213
14 52.66.63.64
15 52.66.146.61
16 13.126.124.154
17 52.66.158.31

======================================
How to send a request from Agent to Master?
	

	Commands - Manually
	> Install puppet agent
	> Puppet.conf
	> puppet-agent
	
	Script?

	$ sudo yum -y install ntp
	$ sudo systemctl start ntpd
	$ sudo systemctl enable ntpd
	$ sudo ntpd -p


	curl -k https://puppet.example.vm:8140/packages/current/install.bash | sudo bash
	13.126.185.211

52.66.27.39 puppet.example.vm

==============================
Agents Servers
1 176.34.130.243
2 54.194.230.231
3 34.244.24.127
4 54.171.118.230
5 34.245.142.253
6 34.253.223.167
7 52.18.93.110
8 34.242.8.95
9 34.244.103.187
10 54.154.191.167
11 54.77.216.99
12 54.194.153.248
13 34.242.162.191
14 34.242.229.144
15 34.245.182.245
16 52.210.183.58
17 34.250.89.219

============================================
Final Step 1
=============================
Create a module "jenkins" with follwing spec

Module Dev - 15 mins

Jenkins Installation
---------------------
> wget -c --header "Cookie: oraclelicense=accept-securebackup-cookie" http://download.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.rpm
> rpm -ivh jdk-8u131-linux-x64.rpm
> sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo
> sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key
> yum install jenkins
> systemctl start jenkins


LEADS - exec | yum 

Final Step 2
modify the site.pp

Final Step 3 & 4

/opt/puppetlabs/puppet/bin/puppet agent --no-daemonize

puppet resource service puppet ensure=running enable=true

====================================================
Sena 2 - 
puppet agent -t	 (One time)

Sena -3 
	modify puppet.conf

	runinterval=3s





